#ifndef LEVEL_H
#define LEVEL_H

#include "oslib/osspriteop.h"
#include <stdio.h>

#include "Enemy.h"

typedef struct HUD
{
	osspriteop_header *font_numbers[10];
	osspriteop_header *mario_hud;
	osspriteop_header *points_i;
	
	osspriteop_header *scoreDisplay[6];
}
HUD;

typedef struct PlatformInfo
{
	float x;
	float y;
	float width;
	float height;
	int numOfSquares;
}
PlatformInfo;

enum PlatRow
{
	NOT_HIT,
	TOP_LEFT,
	TOP_RIGHT,
	MIDDLE_LEFT,
	MIDDLE_RIGHT,
	MIDDLE,
	BOTTOM_LEFT,
	BOTTOM_RIGHT
};

typedef struct Level
{
	int levelNum;
	osspriteop_header *floor;
	osspriteop_header *pipeBottom;
	osspriteop_header *pipeTop;
	osspriteop_header *platTile;
	osspriteop_header *platMoveFrames[3];
	int frame;
	int framesDescending;
	osspriteop_trans_tab *transTab;
	
	int platSize;
	PlatformInfo plats[8];
	enum PlatRow platRow;
	int platSquare;
	
	Shellcreeper *shellcreepers;
	int numOfShellcreepers;
}
Level;

enum GameState
{
	MAIN_MENU,
	LEVEL_INTRO,
	PLAYING,
	POINTS_SCREEN,
	GAME_OVER,
	NAME_SCREEN
};

void initLevel(Level *level, osspriteop_area *area, int size, FILE *logFile);
void getPlatRow(enum PlatRow *thisPlatRow, int i);
void updateHUDScore(HUD *hud, int score);

#endif