#ifndef LEVEL_H
#define LEVEL_H

#include "oslib/osspriteop.h"
#include <stdio.h>

#include "Enemy.h"

typedef struct Player Player;

typedef struct Coin
{
	osspriteop_header *curFrame;
	osspriteop_header *spinFrames[5];
	osspriteop_header *pickupFrames[5];
	int lastFrame;
	int frame;
	
	float x;
	float y;
	float width;
	float height;
	int collected;
	int inactive;
}
Coin;

typedef struct HUD
{
	osspriteop_header *main_menu;
	
	osspriteop_header *font_numbers[10];
	osspriteop_header *decimalPoint;
	osspriteop_header *mario_hud;
	osspriteop_header *points_i;
	osspriteop_header *points_top;
	
	osspriteop_header *scoreDisplayI[6];
	osspriteop_header *scoreDisplayTop[6];
	int highScore;
	
	osspriteop_header *p_equals;
	osspriteop_header *phaseText;
	int phaseDisplayTime;
	osspriteop_header *phaseNumDisplay[2];
	
	osspriteop_header *timerBox;
	osspriteop_header *timerDisplay[4];
	int timer;
	
	osspriteop_header *game_over_text;
}
HUD;

typedef struct PlatformInfo
{
	float x;
	float y;
	float width;
	float height;
	int numOfSquares;
}
PlatformInfo;

enum PlatRow
{
	NOT_HIT,
	TOP_LEFT,
	TOP_RIGHT,
	MIDDLE_LEFT,
	MIDDLE_RIGHT,
	MIDDLE,
	BOTTOM_LEFT,
	BOTTOM_RIGHT
};

typedef struct Level
{
	int levelNum;
	int phaseNum;
	int bonusLevel;
	osspriteop_header *floor;
	osspriteop_header *pipeBottom;
	osspriteop_header *pipeTop;
	osspriteop_header *platTile;
	osspriteop_header *platMoveFrames[3];
	int frame;
	int framesDescending;
	osspriteop_trans_tab *transTab;
	
	int platSize;
	PlatformInfo plats[8];
	enum PlatRow platRow;
	int platSquare;
	
	Shellcreeper *shellcreepers;
	int numOfShellcreepers;
	Sidestepper *sidesteppers;
	int numOfSidesteppers;
	
	int numOfCoins;
	Coin *coins;
}
Level;

enum GameState
{
	MAIN_MENU,
	PLAYING,
	PAUSE,
	POINTS_SCREEN,
	GAME_OVER,
};

void initLevel(Level *level, Player *mario, osspriteop_area *area, int size, FILE *logFile);
void getPlatRow(enum PlatRow *thisPlatRow, int i);
void updateHUDScore(HUD *hud, int score);
void increasePhaseNum(int *phaseNum, HUD *hud);
void updateCoin(Coin *coin);
void updateHUDTimer(HUD *hud, int deltaTime, FILE *logFile);

#endif